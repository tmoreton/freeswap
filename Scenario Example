Scenario Example

POSTING AN ITEM FOR TRADE
	Seller's Perspective
		1. Uploading an item
			- POST to PRODUCT
				-	photoUrl, photo, description, expiration date, location, sellerId

		2. Deleting an Item
			- DELETE to PRODUCT

		3. Updating an Item
			- PUT to PRODUCT




SWIPING
	Buyer's Perspective
		1. Retrieve all product cards
			- GET to ALL PRODUCTS where swapStatus is FALSE
				- ***GoogleAPI/GEO?: Filter all products based on location proximity on front end
				-

		2. Accepting a product from seller (buyer swipes right)
			- POST to MATCH
				- Product's Id from PRODUCT
				- Buyer's Id from Session's User info
				- Seller's Id from PRODUCT's Seller Id field

		*** 3. Rejecting a product from seller (buy swipes left) *** (NEED A BETTER APPROACH)
			- PUT to USER
				- update "dislikes array"

				** Find a better way to GET all cards that are NOT disliked




MATCHES / CHATS
	Seller's Perspective
		1. Retrieving all product matches for Seller
			- GET by Seller ID in MATCHES populate product Id and Buyer Id
			- Retrieve Firebase Id to open chat
			- Sort chats by Product being sold. (example below)

			Products Giving/Selling
				Chair
					1. Susan (traded)
					2. Sue
				Table
					1. Allen
					2. Dave

	Buyer's Perspective
		1. Retrieving all matches products with different sellers
			- GET by Buyer ID in MATCHES populate productId and seller Id

	General
		1. Opening respective chatroom between Buyer and Seller
			- GET MATCH by Buyer ID and Seller ID
			- Obtain FirechatID from Mongo to be retrieve from Firebase
			- Open Chat Room

		2. Logging Chat Messages
			- Firebase chat Updates

		3. Buyer and Seller confirm Swap
			- PUT to MATCH status
				- Applies check mark and moved to successful history Swaps
				- Sends




What happens when...

- item has been successfully traded and there are multiple chats going
		-sends message to all other users that item successfully traded, change PRODUCTS status to TRUE
			-if messages past a certain period, delete messages from database




Questions
1. Better way to store dislikes?
2. MATCHES: SellerID needs to refer to seller from Products. Should we just populate the products to obtain the seller id from there? 
3. Uploading photos?
